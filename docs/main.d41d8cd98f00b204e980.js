!function(e){function t(t){for(var n,a,i=t[0],u=t[1],f=t[2],l=0,p=[];l<i.length;l++)a=i[l],Object.prototype.hasOwnProperty.call(o,a)&&o[a]&&p.push(o[a][0]),o[a]=0;for(n in u)Object.prototype.hasOwnProperty.call(u,n)&&(e[n]=u[n]);for(s&&s(t);p.length;)p.shift()();return c.push.apply(c,f||[]),r()}function r(){for(var e,t=0;t<c.length;t++){for(var r=c[t],n=!0,i=1;i<r.length;i++){var u=r[i];0!==o[u]&&(n=!1)}n&&(c.splice(t--,1),e=a(a.s=r[0]))}return e}var n={},o={0:0},c=[];function a(t){if(n[t])return n[t].exports;var r=n[t]={i:t,l:!1,exports:{}};return e[t].call(r.exports,r,r.exports,a),r.l=!0,r.exports}a.m=e,a.c=n,a.d=function(e,t,r){a.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},a.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a.t=function(e,t){if(1&t&&(e=a(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(a.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)a.d(r,n,function(t){return e[t]}.bind(null,n));return r},a.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(t,"a",t),t},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},a.p="";var i=window.webpackJsonp=window.webpackJsonp||[],u=i.push.bind(i);i.push=t,i=i.slice();for(var f=0;f<i.length;f++)t(i[f]);var s=u;c.push([49,1]),r()}({49:function(e,t,r){"use strict";r.r(t);var n=r(0),o=r(13),c=r.n(o),a=function(e,t,r,n){var o,c=arguments.length,a=c<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,r):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,r,n);else for(var i=e.length-1;i>=0;i--)(o=e[i])&&(a=(c<3?o(a):c>3?o(t,r,a):o(t,r))||a);return c>3&&a&&Object.defineProperty(t,r,a),a},i=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},u=function(){function e(){}return a([n.c,i("design:type",String)],e.prototype,"street",void 0),a([n.c,i("design:type",String)],e.prototype,"city",void 0),e=a([Object(n.b)({required:["street","city"]})],e)}(),f=function(e,t,r,n){var o,c=arguments.length,a=c<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,r):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,r,n);else for(var i=e.length-1;i>=0;i--)(o=e[i])&&(a=(c<3?o(a):c>3?o(t,r,a):o(t,r))||a);return c>3&&a&&Object.defineProperty(t,r,a),a},s=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},l=function(){function e(){}return f([Object(n.a)((function(){return u})),s("design:type",u)],e.prototype,"address",void 0),e=f([Object(n.b)({required:["name","age","address"]})],e)}(),p=document.getElementById("schema-output"),d=document.getElementById("data-input"),y=document.getElementById("state-output");function g(e){y.classList.remove("success"),y.classList.add("error"),y.innerHTML="<br/><br/>"+e.map((function(e){return e.dataPath+" => "+e.message})).join("<br/>")}function v(e,t){try{var r=t(JSON.parse(e));console.log("validate result:",r),r.valid?(y.classList.remove("error"),y.classList.add("success"),y.innerHTML=""):g(r.errors)}catch(e){console.error(e),g([{dataPath:e.name,message:e.message}])}}var b=n.d.generateJSONSchema(l);console.log("schema:",b);var m=(new c.a).compile(b);!function(e,t,r){p.innerText=JSON.stringify(e,void 0,"\t"),d.onkeyup=function(e){v(e.currentTarget.value,r)},d.value=JSON.stringify(t,void 0,"\t"),v(d.value,r)}(b,{name:"Toto",age:28,address:{city:"Paris",street:"56 rue Saint Martin"}},(function(e){return{valid:m(e),errors:m.errors||[]}}))}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,